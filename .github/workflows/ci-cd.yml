name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test-backend:
    runs-on: ubuntu-latest
    name: Backend Tests
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'
        
    - name: Restore dependencies
      run: dotnet restore ./ChatbotApi/ChatbotApi.csproj
      
    - name: Build
      run: dotnet build ./ChatbotApi/ChatbotApi.csproj --no-restore
      
    - name: Test
      run: dotnet test ./ChatbotApi/ChatbotApi.csproj --no-build --verbosity normal

  test-frontend:
    runs-on: ubuntu-latest
    name: Frontend Tests
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: chatbot-frontend/package-lock.json
        
    - name: Install dependencies
      run: npm ci
      working-directory: ./chatbot-frontend
      
    - name: Build
      run: npm run build
      working-directory: ./chatbot-frontend
      
    - name: Run unit tests
      run: npm run test -- --watch=false --browsers=ChromeHeadless
      working-directory: ./chatbot-frontend

  e2e-tests:
    runs-on: ubuntu-latest
    name: E2E Tests
    needs: [test-backend, test-frontend]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: chatbot-frontend/package-lock.json
        
    - name: Install frontend dependencies
      run: npm ci
      working-directory: ./chatbot-frontend
      
    - name: Build frontend
      run: npm run build
      working-directory: ./chatbot-frontend
      
    - name: Restore backend dependencies
      run: dotnet restore ./ChatbotApi/ChatbotApi.csproj
      
    - name: Build backend
      run: dotnet build ./ChatbotApi/ChatbotApi.csproj --no-restore
      
    - name: Install Playwright browsers
      run: npx playwright install --with-deps
      working-directory: ./chatbot-frontend
      
    - name: Run Playwright tests
      run: npm run e2e
      working-directory: ./chatbot-frontend
      
    - uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-report
        path: chatbot-frontend/playwright-report/
        retention-days: 30

  build-and-deploy:
    runs-on: ubuntu-latest
    name: Build and Deploy
    needs: [test-backend, test-frontend, e2e-tests]
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: chatbot-frontend/package-lock.json
        
    - name: Install frontend dependencies
      run: npm ci
      working-directory: ./chatbot-frontend
      
    - name: Build frontend for production
      run: npm run build
      working-directory: ./chatbot-frontend
      
    - name: Publish backend
      run: dotnet publish ./ChatbotApi/ChatbotApi.csproj -c Release -o ./publish
      
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-artifacts
        path: |
          ./publish/
          ./chatbot-frontend/dist/
        retention-days: 30
